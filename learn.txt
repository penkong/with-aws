which aws service would simplify the migration of a db to aws.???
aws database migration service

create aws acc ,
 

network: cables ,routers , servers

routers : device that forward packets , they know where send data

switch : takes packet and send it to correct server .

pc >> routers >> switch >> receiver

cloud computing : on demand delivery of compute power/ resources

hybrid cloud : some on cloud , some on ours

iaas : provide building blocks for cloud it , networking , computers , datastorage


paas : remove need for your organization to manage the infra
       focus on deploy and managment.


Saas : compledte proudct.


after sign in 
can change your Region 


first service :

IAM


check avai service : on region table



in IAM , we create user and assign them to groups .

create user ,
define password,
set permissions
define group 
admins 
tick that 
next tags
tags : are way to mark a user and add them attributes. 
for example >> Departemnt : Enginnering
review 
create user . 
---> now 
it give us : csv , link to login (changeable) and current state 
on dashboard 
on top 
IAM users sing-in link 
customize 
add name : like priotix (name of root user )
account alias


for sign in :
paste alias
paste username
password


if on navbar you see @ means you are IAM user 
otherwise you are root user .



now you can change policy from root.



on left list of all policies ,


now if click on one policy
it show list of permissions that currently related to that specific policy
json 
{
  effect : allow
  action : valid service or services 
  resource :
}


also can create your own policy 

policy
create policy
choose service 
choose policy
resources
condition


defence mechnism for IAM 
2 way 
password policy
MFA = multi factor authentication
MFA options 
virtual : google, multi (Authy)
U2F : physical , usb
hardware key fob MFA device (Gemalto)
hardware key fob AWS GovCloud (sure pass id)
 


Access way 
consolo 
cli 
sdk 

need to generate Access keys 

users do for themselves

Access key Id 
Access key secret



install aws cli 


aws --version


now create Access key :
go to users 
@user not root
security credentials tab
create Access key 


cli :
aws configure 
ask id 
ask key 
region name : enter
enter

aws iam list-users


IAM roles :
some services for their actions
on our behalf , on our account
they are like users
need permissions
need to assign permissions to services
we use IAM role.
ec2 == virtual server
service + IAM role == create entity
if ec2 want access data 
if permission correct

common roles 
check pdf.


IAM security tools :
IAM credentials report (account lvl)
IAM Access advisor (user lvl)



on bottom left :
select credentials report
download report
 
then 
click users
last tab
Access advisor
it show what we used


Best practices:
dont use root
create user 
create group 
strong pass 
mfa 
create roles 
use access with cli 
take 5 green tick on dashboard



Shared Responsibility Model For IAM :::: it is question of exam 
aws  : infra , config , compliance validation
you : users groups roles policy , mfa , rotate keys , analyze 


IAM DONE !!!!

---------------------------------------------------------------------
IAM ---> EC2 (iaas)

EC2 - elstic compute cloud 



control billing :

top right conrenr
click user 
my billing dashboard
need permissionss

login root
my account
search for 
IAM user and role access
edit 
give access.
refresh .

now activated.



SET Budgets :
on right 
go to 
Budgets
create a budget
cost budget
name 
monthly 
recurring
fixed amount
10 dollars
click config
actual cost 
alert threshold 
for example : 80 percent
add email
add more alert if you want 
finally create .



to check what cause price for you :
Billing 
bills 
select priod .




EC2 Basics :

create first website on aws .
check pdf for what ec2 offer.
ec2
ebs = store
elb = load across machine
asg = scaling

EC2 is very important .


choose os 
how much resources ...
how much hardware (ec2 instance store)
how much network( ebs & efs )
network card
firewall rules

there are bootstrap script fot these.


ec2 innstace types 
t2.micro == 750 hrs per month free
 
(((((((((((((( BE < DO < HAVE < SHARE ))))))))))))))

launching ec2 instance :

with ec2 user data 
console
choose region 
type ec2
now 

ec2 console :
on right 
instances 
launch instance
must choose ami (amzon machine image)
we here use quick start
amazon linux2
next 
choose type of instnace 
click 
configure instance details section 
go down 
advanced details 
user data (script will ec2 run)
allow us to use webserver 
ec2-user-data.sh (with apache or go with nginx)
copy paste 
click
add storage 
add tags (like user tage)
name : my first instance
Departemnt : finance 
click 
config security group
it say what we allow in and out
create new security group
add role 
http 
review 
launch
modal open 
create a new key pair 
it give us a pem file (public key)
launch
view 


after loading 



in description 
you will see public ip and dns 



right click on instance 
instance state 
stop




firewall
security groups classic ports :
can reference by IP or security group 
only contain allow rules

create security group around ec2 instance
it will have rules 
inbound / outbound traffic 
ports , ip range



define your ip with port 22 for ssh for example
port 21 = ftp
22 = sftp , ssh for linux 
80 = http
443 = https
3389 = remote desktop protocol for windows



security group :
on left 
network and security 
click
security groups
show inteface 

on bottom right click 
see details
inbound rules 
outbound rules



can attach current security group 
to new instance of ec2



SSH :
by command line 
by ec2 instance connect => in only work with amazon lx 2

to connect 
in instance console 
find out ipv4
ssh ec2-user@ip  (if use amazon linux machine)
use that pem key file as public key to connect
ssh -i <name of key with .pem> ec2-user@ip 
chmod 0400 <name of key> ==> to make it immutable
now again run that.
you are in 



with ec2 connect 
beside launch instance
click
connect 
click go .


now connect 
aws --version
aws iam list-users
aws configure 
enter things 
baddddddddddddddddddddddddddddddddddddddddddddd

we want leverage roles of iam 
on instance 
right click 
instance settings 
attach / replace iam role 





there is type of launching a ec2 instance 
pdf


-----------------------------------------------------------------------

EC2 Instance Storage :

EBS : elastic block store 
ebs volume 
data stay 
after termination of ec2
ec2 - ebs , one to one relationship
it is like usb
it use network to 
communicate to ec2




hand on :
ec2 instance console 
on description 
go down
root device and block device show it.
or 
on left 
go down
elstic blocks store 
volumes
for create new one 
create button 

then 
click right 
and you can attach 



snapshot :
backup 
by snapshot you can move 
ebs to another zone 



AMI : 
amazon machine image 
what is that power instances
we can build our ami 
it is business.


make your instance 
after 
right click 
image 
create image 
it create ami for us .


on left :
images 
AMIs
on creation of new instance
you can consume it .

it is good because you will do nginx stuff one time .



EBS (network) are not best 
we use 
EC2 instance store (hardware attached) 
can have lose storage .
for temporary data 



3th type storege

EFS : elastic file system.
it is nfs 
managed network file system
more expensive . can attach to 100 ec2



========================================================================

ELB and ASG 

elastic load balancing , auto scaling group


horizantal scalability : elasticity

vartical : junior become senior (scale up)
horizantal : junior become many junior (auto scale , load balancing)

 
high availablitiy : at least 2 zones.


agility : make resources available for your developers as as possible




ELB :
servers 
forward traffic
only one dns
it is managed elb
 
3 kind of lb :
layer 7 , app lb , https http
layer 4 , network lb , ultra high performance ,
layer 7,4 , old school.


ELB : ALB or NLB or old LB




pracitce :
create 2 ec2 instance
create one 
click right on created 
make new similar from it .
now both are accessbile 
but we need make it user friendly 

create lb
on left 
Load balancing click 
load balancers
there are 3 types there
application layer 7
fill name 
it is internet facing 
define listeners
availablitiy zone 
tick servers 
config security
create new security group
load-balancer-4324
make port

config routing
for forward traffic need
define target group (receiver servers)
new target group 
name it
target type instance

next 

now add 2 instances 
select
add to registered

next 

creation complete
can access web 
from DNS name in description




ASG:
pdf 
define min and max
min , max , actual size



(disable last ec2 instances)
pracitce:
on left 
AUTO scaling
click 
auto scaling group 
click
on his console
create auth scaling group button
name it 

now need launch template
click to create 
name it 
scroll down 
choose AMI
choose instance type
choose key pair
choose security group
on addvanced details 
User Data
past scripts
template created 

now select template

next 

adhere to launch template
on network 
subnet
select 3 of them to make it high availablitiy

next 

load balancing
click enable 
choose target group (lb)(pre generated )
tick health check

next 

group size
desired 
min 
max
now scaling policy 
select target tracking policies - select none

next
next 
next

check things on console


clean up things 


===================================================================

S3:
storage 

backup , recovery , archive , intergration and backbone of website 
app hosting , media hosting . 

files == objects
objects store in buckets (directories)
must be unique name globally 

objects have key
key is full path to object 

key is composed of prefix + object name 
s3://my-bucket/fdsfd/fsdfds/ts.txt



OBJECTS :
pdf
objects values are content of body 
metadata = list of key value 
tags (security / lifecylce)
version id


s3 security :
pdf
User base 
resource base : bucket policies , acl , 
encryption 


ec2 instance role ---> let access s3 bucket

advanced : cross account access bucket 

json based pilicies




pracitce :
s3 console 
image is there 
you do same for yourself 

click tab
permissionss
block public access 
edit 
uncheck(not good )
save

next 

bucket policy tab 
click on policy generator 
select type s3 
Principal(who) * everyone 
action (list exist)
arn(amazon resource name) copy it from bucket 
at exist tab
at end of it add /*
add statement 

generate pilicy

copy / paste 
save




S3 webiste :

<bucket name>.s3-webiste-<region>.amazonaws.com

 

hands on :

on overview tab 
upload html files 
and related stuff
properites tab
choose  static website hosting 
use this bucket 
write index document 
save 


versioning :
must enable it 


hands on :
properites tab 
versioning
enable


Server access :
log files to s3 

hands on 
on console 
create new bucket 
naem 
region 
create 

now click on your first bucket 
properites tab 
server access logg
enable 
IMPORTANT : choose correct bucket 
your bucket currently in 


now go to console 
click on log bucket 



S3 REPLICATION :
pdf
crr(cross region) or srr(same region) 
copy behind scene async


hands on 
make new bucket 
you have target bucket 
enable versioning for both
on first bucket
managment
REPLICATION
add rule 
routine stuff.



s3 classes :
there are other casses 
like less use files 
check pdf



durability and availablitiy :
file not delete , 


hands on :


